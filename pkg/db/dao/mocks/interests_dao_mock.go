// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SuperMatch/pkg/db/dao (interfaces: InterestsDao)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/SuperMatch/model"
	gomock "github.com/golang/mock/gomock"
)

// MockInterestsDao is a mock of InterestsDao interface.
type MockInterestsDao struct {
	ctrl     *gomock.Controller
	recorder *MockInterestsDaoMockRecorder
}

// MockInterestsDaoMockRecorder is the mock recorder for MockInterestsDao.
type MockInterestsDaoMockRecorder struct {
	mock *MockInterestsDao
}

// NewMockInterestsDao creates a new mock instance.
func NewMockInterestsDao(ctrl *gomock.Controller) *MockInterestsDao {
	mock := &MockInterestsDao{ctrl: ctrl}
	mock.recorder = &MockInterestsDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterestsDao) EXPECT() *MockInterestsDaoMockRecorder {
	return m.recorder
}

// CreateUserInterestDao mocks base method.
func (m *MockInterestsDao) CreateUserInterests(arg0 []model.UserInterests) ([]model.UserInterests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserInterests", arg0)
	ret0, _ := ret[0].([]model.UserInterests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUserInterestDao indicates an expected call of CreateUserInterestDao.
func (mr *MockInterestsDaoMockRecorder) CreateUserInterestDao(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserInterests", reflect.TypeOf((*MockInterestsDao)(nil).CreateUserInterests), arg0)
}

// GetInterestsList mocks base method.
func (m *MockInterestsDao) GetInterestsList() ([]model.Interests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterestsList")
	ret0, _ := ret[0].([]model.Interests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInterestsList indicates an expected call of GetInterestsList.
func (mr *MockInterestsDaoMockRecorder) GetInterestsList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterestsList", reflect.TypeOf((*MockInterestsDao)(nil).GetInterestsList))
}

// GetUserInterestsDao mocks base method.
func (m *MockInterestsDao) GetUserInterests(arg0 int) ([]model.UserInterests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInterests", arg0)
	ret0, _ := ret[0].([]model.UserInterests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInterestsDao indicates an expected call of GetUserInterestsDao.
func (mr *MockInterestsDaoMockRecorder) GetUserInterestsDao(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInterests", reflect.TypeOf((*MockInterestsDao)(nil).GetUserInterests), arg0)
}
