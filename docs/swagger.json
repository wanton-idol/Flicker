{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "API documentation",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/chat/last/messages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Last Messages of Chats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get Last Messages",
                "parameters": [
                    {
                        "description": "Chat IDs",
                        "name": "chatIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChatIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "last messages retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/message": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save Message and Media",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "SaveMessage",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Media",
                        "name": "media",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message",
                        "name": "message",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Sender ID",
                        "name": "sender_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Receiver ID",
                        "name": "receiver_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat saved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/messages/status": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Messages Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "UpdateMessagesStatus",
                "parameters": [
                    {
                        "description": "Message IDs",
                        "name": "messageIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MessagesIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "messages status updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/user/chats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve User Chats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "RetrieveUserChats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chat_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chats retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/user/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User Chats List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "GetUserChatsList",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chats retrieved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create/user_profile/index": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create User Profile Index",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "CreateProfileIndex",
                "responses": {
                    "200": {
                        "description": "index created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create/user_stories/index": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create User Stories Index",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stories"
                ],
                "summary": "CreateStoriesIndex",
                "responses": {
                    "200": {
                        "description": "index created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/event/index": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an event index",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "CreateEventIndexHandler",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "SearchEventsHandler",
                "parameters": [
                    {
                        "description": "Event Filter",
                        "name": "eventFilter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventFilterDTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/filters": {
            "get": {
                "security": [
                    {
                        "None": []
                    }
                ],
                "description": "Get filters list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "GetFiltersHandler",
                "responses": {
                    "200": {
                        "description": "filters list",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/interests": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get interest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get Interests_category List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched interests list",
                        "schema": {
                            "$ref": "#/definitions/model.InterestsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nudges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get nudges list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get Nudges List",
                "responses": {
                    "200": {
                        "description": "Fetched nudges list",
                        "schema": {
                            "$ref": "#/definitions/model.Nudge"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/searchProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get user search profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "UserSearchProfile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received profiles.",
                        "schema": {
                            "$ref": "#/definitions/elasticsearchPkg.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/advancedFilter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update the advanced filter for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "updateAdvancedFilter",
                "parameters": [
                    {
                        "description": "advancedFilter",
                        "name": "advancedFilter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedFilter"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "advanced filters updated.",
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedFilter"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "post": {
                "description": "API for deleting user by updating the email. Just for testing purpose.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "For Testing Purpose Only"
                ],
                "summary": "Delete user handler",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "new email which will replace the old email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/event": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update event for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "UpdateUserEventHandler",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEventDTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEventDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an event for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "CreateUserEventsHandler",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEventDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "event created successfully.",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete event for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "DeleteUserEventHandler",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEventDTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "event deleted successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all events for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "GetUserEventsHandler",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EventResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/google/login": {
            "post": {
                "description": "google login API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "GoogleLoginHandler",
                "parameters": [
                    {
                        "description": "ID token",
                        "name": "idToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserIDToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/interests": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get user interest list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get User Interests_category List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user interests list",
                        "schema": {
                            "$ref": "#/definitions/model.InterestsCategory"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update user interests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update User Interests_category",
                "parameters": [
                    {
                        "description": "userInterestsData",
                        "name": "interests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InterestData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User interests updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to create user interests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Create User Interests_category",
                "parameters": [
                    {
                        "description": "userInterests",
                        "name": "interests",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InterestsCategory"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserInterests created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/likes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User Likes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user likes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received user likes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserLikers"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error in fetching user match.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/location": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "UpdateLocationHandler",
                "parameters": [
                    {
                        "description": "location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user location updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "User Username and Password login API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "userLogin",
                "parameters": [
                    {
                        "description": "userLogin",
                        "name": "userLogin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/match": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get User Match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUserMatch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received user match",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserMatchDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error in fetching user match.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/nudge": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user nudges",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "UpdateUserNudge",
                "parameters": [
                    {
                        "type": "file",
                        "description": "nudgeMedia",
                        "name": "media",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "nudgeRequest",
                        "name": "nudgeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NudgeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nudge_id",
                        "name": "nudgeID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user nudge updated successfully",
                        "schema": {
                            "$ref": "#/definitions/model.NudgeDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to create user nudge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Create User Nudge",
                "parameters": [
                    {
                        "description": "userNudge",
                        "name": "nudge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NudgeDetail"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserNudge created successfully",
                        "schema": {
                            "$ref": "#/definitions/model.NudgeDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user nudges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "DeleteUserNudge",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nudge ID",
                        "name": "nudge_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user nudge deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/nudge/media": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to create user nudges with media",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Create user nudges with media",
                "parameters": [
                    {
                        "type": "file",
                        "description": "nudgeMedia",
                        "name": "media",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "nudgeRequest",
                        "name": "nudgeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NudgeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user nudge created successfully",
                        "schema": {
                            "$ref": "#/definitions/model.NudgeDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/nudges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get user nudges list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get User nudges List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user nudges list",
                        "schema": {
                            "$ref": "#/definitions/model.NudgeDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get the user profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "getUserProfile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received profile.",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        },
                        "headers": {
                            "token": {
                                "type": "string",
                                "description": "token"
                            },
                            "userID": {
                                "type": "string",
                                "description": "user_id"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "token": {
                                "type": "string",
                                "description": "token"
                            },
                            "userID": {
                                "type": "string",
                                "description": "user_id"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "token": {
                                "type": "string",
                                "description": "token"
                            },
                            "userID": {
                                "type": "string",
                                "description": "user_id"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to store the user profile in elasticsearch and database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "updateUserProfile",
                "parameters": [
                    {
                        "description": "userProfile",
                        "name": "userProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user Profile updated.",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/profileMedia": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Profile media with order and s3 signed URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "GetUserProfileMedia",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received profile media.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to save images to S3 and DB",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "SaveProfileMedia",
                "parameters": [
                    {
                        "type": "file",
                        "description": "ImageToUpload",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully uploaded files.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to Delete Profile media.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "DeleteMediaAPI",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MediaID",
                        "name": "mediaId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully deleted media.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "User register API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "userRegister",
                "parameters": [
                    {
                        "description": "userRegister",
                        "name": "userRegister",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegistrationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user created.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/searchProfile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to get the search profile for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "getUserSearchProfile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user Search Profile found.",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/send/otp": {
            "post": {
                "description": "API for sending verification sms to user with OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP",
                "parameters": [
                    {
                        "description": "userData",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/stories/index": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create User Stories",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stories"
                ],
                "summary": "Create User Stories",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Media",
                        "name": "media",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "csv",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User Profile ID",
                        "name": "user_profile_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user stories indexed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/stories/search/location": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user stories based on location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stories"
                ],
                "summary": "GetUserStoriesByLocation",
                "parameters": [
                    {
                        "description": "Location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/elasticsearchPkg.UserStories"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/stories/search/profileID": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user stories based on profile id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stories"
                ],
                "summary": "GetUserStoriesByProfileID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Profile ID",
                        "name": "user_profile_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/elasticsearchPkg.UserStories"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/swipe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "swipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "swipe",
                "parameters": [
                    {
                        "description": "userLike",
                        "name": "userLike",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLikeDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/update/profileMedia": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update user media order id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update Media Handler",
                "parameters": [
                    {
                        "description": "mediaDetails",
                        "name": "mediaDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MediaOrderId"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user media profile updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/updateSearchProfile": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update the search profile for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "updateUserSearchProfile",
                "parameters": [
                    {
                        "description": "userSearchProfile",
                        "name": "userSearchProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserSearchProfile"
                        }
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user Search Profile updated.",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/upgradePremium": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to upgrade the profile to premium",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "PremiumUpgrade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "userID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully received profile.",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/verify/email": {
            "get": {
                "description": "API for verify email of the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "verification code",
                        "name": "verification_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "email verified successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "API for sending verification email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Verification Email",
                "parameters": [
                    {
                        "description": "send user verification email",
                        "name": "verifyEmail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "verification email sent successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/verify/otp": {
            "post": {
                "description": "API for verification of the OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "verify user data",
                        "name": "verifyUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AdvancedFilter": {
            "type": "object",
            "properties": {
                "drink": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Drink"
                    }
                },
                "education": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.EducationLevel"
                    }
                },
                "exercise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Exercise"
                    }
                },
                "have_or_want_children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "height": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "incognito_mode": {
                    "type": "boolean"
                },
                "is_online": {
                    "type": "boolean"
                },
                "is_profile_verified": {
                    "type": "boolean"
                },
                "looking_for": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "marital_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.MaritalStatus"
                    }
                },
                "occupation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Occupation"
                    }
                },
                "politics_likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "religion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Religion"
                    }
                },
                "smoke": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Smoke"
                    }
                },
                "star_sign": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.CreateEventDTO": {
            "type": "object",
            "properties": {
                "attendee": {
                    "type": "string"
                },
                "date_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/dto.Location"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.EventFilterDTO": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.EventResponseDTO": {
            "type": "object",
            "properties": {
                "attendees": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/dto.Location"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.Location": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "pincode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserData": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "dto.UserEmail": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.UserIDToken": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "dto.UserLikeDTO": {
            "type": "object",
            "properties": {
                "likeeID": {
                    "type": "integer"
                },
                "likerID": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dto.UserMatchDTO": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "chat_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "match_id": {
                    "type": "integer"
                },
                "media_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UserProfile": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "drink": {
                    "$ref": "#/definitions/elasticsearchPkg.Drink"
                },
                "education": {
                    "$ref": "#/definitions/elasticsearchPkg.Education"
                },
                "exercise": {
                    "$ref": "#/definitions/elasticsearchPkg.Exercise"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/elasticsearchPkg.Gender"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_premium": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "looking_for": {
                    "$ref": "#/definitions/elasticsearchPkg.LookingFor"
                },
                "marital_status": {
                    "$ref": "#/definitions/elasticsearchPkg.MaritalStatus"
                },
                "occupation": {
                    "$ref": "#/definitions/elasticsearchPkg.Occupation"
                },
                "pronoun": {
                    "type": "string"
                },
                "religion": {
                    "$ref": "#/definitions/elasticsearchPkg.Religion"
                },
                "sexual_orientation": {
                    "$ref": "#/definitions/elasticsearchPkg.SexualOrientation"
                },
                "smoke": {
                    "$ref": "#/definitions/elasticsearchPkg.Smoke"
                },
                "user_id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "dto.UserRegistrationDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserSearchProfile": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "integer"
                },
                "gender": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Gender"
                    }
                },
                "hide_my_name": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "snooze": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyUser": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserData"
                }
            }
        },
        "elasticsearchPkg.AdvancedFilter": {
            "type": "object",
            "properties": {
                "drink": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Drink"
                    }
                },
                "education": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.EducationLevel"
                    }
                },
                "exercise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Exercise"
                    }
                },
                "have_or_want_children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "height": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "incognito_mode": {
                    "type": "boolean"
                },
                "is_online": {
                    "type": "boolean"
                },
                "is_profile_verified": {
                    "type": "boolean"
                },
                "looking_for": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "marital_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.MaritalStatus"
                    }
                },
                "occupation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Occupation"
                    }
                },
                "politics_likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "religion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Religion"
                    }
                },
                "smoke": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Smoke"
                    }
                },
                "star_sign": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "elasticsearchPkg.Drink": {
            "type": "string",
            "enum": [
                "frequently",
                "socially",
                "rarely",
                "never",
                "Sober"
            ],
            "x-enum-varnames": [
                "Drink_Frequently",
                "Drink_Socially",
                "Drink_Rarely",
                "Drink_Never",
                "Drink_Sober"
            ]
        },
        "elasticsearchPkg.Education": {
            "type": "object",
            "properties": {
                "college": {
                    "type": "string"
                },
                "education_level": {
                    "$ref": "#/definitions/elasticsearchPkg.EducationLevel"
                }
            }
        },
        "elasticsearchPkg.EducationLevel": {
            "type": "string",
            "enum": [
                "high school",
                "vocational school",
                "in college",
                "undergraduate degree",
                "in grad school",
                "graduate degree"
            ],
            "x-enum-varnames": [
                "HighSchool",
                "VocationalSchool",
                "InCollege",
                "UnderGraduateDegree",
                "InGradSchool",
                "GraduateDegree"
            ]
        },
        "elasticsearchPkg.Exercise": {
            "type": "string",
            "enum": [
                "active",
                "sometimes",
                "almost never"
            ],
            "x-enum-varnames": [
                "Exercise_Active",
                "Exercise_Sometimes",
                "Exercise_AlmostNever"
            ]
        },
        "elasticsearchPkg.Gender": {
            "type": "string",
            "enum": [
                "male",
                "female",
                "binary"
            ],
            "x-enum-varnames": [
                "MALE",
                "FEMALE",
                "BINARY"
            ]
        },
        "elasticsearchPkg.Image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "elasticsearchPkg.LookingFor": {
            "type": "string",
            "enum": [
                "relationship",
                "marriage",
                "casual",
                "NotKnownYet"
            ],
            "x-enum-varnames": [
                "Relationship",
                "Marriage",
                "Casual",
                "NotKnownYet"
            ]
        },
        "elasticsearchPkg.MaritalStatus": {
            "type": "string",
            "enum": [
                "single",
                "married",
                "divorced",
                "widowed"
            ],
            "x-enum-varnames": [
                "Single",
                "Married",
                "Divorced",
                "Widowed"
            ]
        },
        "elasticsearchPkg.Occupation": {
            "type": "string",
            "enum": [
                "student",
                "doctor",
                "engineer",
                "entrepreneur",
                "other"
            ],
            "x-enum-varnames": [
                "Student",
                "Doctor",
                "Engineer",
                "Entrepreneur",
                "Other"
            ]
        },
        "elasticsearchPkg.Religion": {
            "type": "string",
            "enum": [
                "agnostic",
                "atheist",
                "catholic",
                "hindu",
                "muslim",
                "christian",
                "jain",
                "sikh",
                "buddhist",
                "jewish",
                "mormon",
                "latter-day saint",
                "zoroastrian",
                "spiritual"
            ],
            "x-enum-varnames": [
                "Agnostic",
                "Atheist",
                "Catholic",
                "Hindu",
                "Muslim",
                "Christian",
                "Jain",
                "Sikh",
                "Buddhist",
                "Jewish",
                "Mormon",
                "LatterDaySaint",
                "Zoroastrian",
                "Spiritual"
            ]
        },
        "elasticsearchPkg.SexualOrientation": {
            "type": "string",
            "enum": [
                "heterosexual",
                "homosexual",
                "bisexual",
                "asexual",
                "pansexual",
                "demisexual"
            ],
            "x-enum-varnames": [
                "Heterosexual",
                "Homosexual",
                "Bisexual",
                "Asexual",
                "Pansexual",
                "Demisexual"
            ]
        },
        "elasticsearchPkg.Smoke": {
            "type": "string",
            "enum": [
                "socially",
                "never",
                "regularly"
            ],
            "x-enum-varnames": [
                "Smoke_Socially",
                "Smoke_Never",
                "Smoke_Regularly"
            ]
        },
        "elasticsearchPkg.UserNudgeProfile": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "elasticsearchPkg.UserProfile": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "drink": {
                    "$ref": "#/definitions/elasticsearchPkg.Drink"
                },
                "education": {
                    "$ref": "#/definitions/elasticsearchPkg.Education"
                },
                "exercise": {
                    "$ref": "#/definitions/elasticsearchPkg.Exercise"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/elasticsearchPkg.Gender"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Image"
                    }
                },
                "is_premium": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "looking_for": {
                    "$ref": "#/definitions/elasticsearchPkg.LookingFor"
                },
                "marital_status": {
                    "$ref": "#/definitions/elasticsearchPkg.MaritalStatus"
                },
                "occupation": {
                    "$ref": "#/definitions/elasticsearchPkg.Occupation"
                },
                "pronoun": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.UserNudgeProfile"
                    }
                },
                "religion": {
                    "$ref": "#/definitions/elasticsearchPkg.Religion"
                },
                "sexual_orientation": {
                    "$ref": "#/definitions/elasticsearchPkg.SexualOrientation"
                },
                "smoke": {
                    "$ref": "#/definitions/elasticsearchPkg.Smoke"
                },
                "userSearchProfile": {
                    "$ref": "#/definitions/elasticsearchPkg.UserSearchProfile"
                },
                "user_id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "elasticsearchPkg.UserSearchProfile": {
            "type": "object",
            "properties": {
                "advanced_filter": {
                    "$ref": "#/definitions/elasticsearchPkg.AdvancedFilter"
                },
                "distance": {
                    "type": "integer",
                    "default": 10
                },
                "gender": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearchPkg.Gender"
                    }
                },
                "hide_my_name": {
                    "type": "boolean"
                },
                "language": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "snooze": {
                    "type": "string"
                }
            }
        },
        "elasticsearchPkg.UserStories": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "media_type": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "user_profile_id": {
                    "type": "integer"
                }
            }
        },
        "model.ChatIDs": {
            "type": "object",
            "properties": {
                "chat_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.InterestData": {
            "type": "object",
            "properties": {
                "interest_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestDetails"
                    }
                }
            }
        },
        "model.InterestDetails": {
            "type": "object",
            "properties": {
                "interest_id": {
                    "type": "integer"
                },
                "interest_values": {
                    "type": "string"
                }
            }
        },
        "model.InterestsCategory": {
            "type": "object",
            "properties": {
                "creativity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "film_and_tv": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "food_and_drink": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "going_out": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "music": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pluto_values_and_allyship": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reading": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "self_care": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "staying_in": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "travelling": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values_and_traits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.InterestsListResponse": {
            "type": "object",
            "properties": {
                "creativity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "film_and_tv": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "food_and_drink": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "going_out": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "music": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "pets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "pluto_values_and_allyship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "reading": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "self_care": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "sports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "staying_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "travelling": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                },
                "values_and_traits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InterestsResponse"
                    }
                }
            }
        },
        "model.InterestsResponse": {
            "type": "object",
            "properties": {
                "emoticon": {
                    "type": "string"
                },
                "interest_value": {
                    "type": "string"
                }
            }
        },
        "model.MediaOrderId": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "model.MessagesIDs": {
            "type": "object",
            "properties": {
                "message_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.Nudge": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "model.NudgeDetail": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.NudgeRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.UserLikers": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "token used to authenticate",
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}